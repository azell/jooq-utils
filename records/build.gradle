plugins {
  id("java-library")
  id("nu.studer.jooq")
}

dependencies {
  jooqRuntime(Libs.logbackClassic)
  jooqRuntime(Libs.postgresql)

  api("org.jooq:jooq")
  api(Libs.guava, project(":types"))
}

jooq {
  version = Versions.jooq
  sample(sourceSets.main) {
    jdbc {
      driver = "org.postgresql.Driver"
      url = "jdbc:postgresql://localhost:5432/sampledb"
      user = "postgres"
      password = "mysecretpassword"
    }
    generator {
      database {
        name = "org.jooq.meta.postgres.PostgresDatabase"
        includes = ".*"
        excludes = "information_schema[.].*|databasechangelog.*"
        inputSchema = "public"
        forcedTypes {
          forcedType {
            binding = "com.github.azell.jooq_utils.bindings.PostgresDateRangeBinding"
            includeTypes = "DATERANGE"
            userType = "com.google.common.collect.Range<java.time.LocalDate>"
          }
          forcedType {
            binding = "com.github.azell.jooq_utils.bindings.PostgresInt4RangeBinding"
            includeTypes = "INT4RANGE"
            userType = "com.google.common.collect.Range<Integer>"
          }
          forcedType {
            binding = "com.github.azell.jooq_utils.bindings.PostgresInt8RangeBinding"
            includeTypes = "INT8RANGE"
            userType = "com.google.common.collect.Range<Long>"
          }
          forcedType {
            binding = "com.github.azell.jooq_utils.bindings.PostgresNumRangeBinding"
            includeTypes = "NUMRANGE"
            userType = "com.google.common.collect.Range<java.math.BigDecimal>"
          }
        }
      }
      generate {
        deprecated = false
        immutablePojos = true
        interfaces = true
        javaTimeTypes = true
        pojos = true
        pojosEqualsAndHashCode = true
        serializablePojos = false
      }
      target {
        packageName = "com.github.azell.jooq_utils.sample.data"
      }
    }
  }
}

tasks {
  compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
  }
}

generateSampleJooqSchemaSource.dependsOn(":schema:update")
