plugins {
  id("java-library")
  id("nu.studer.jooq")
}

dependencies {
  jooqRuntime(Libs.h2)
  jooqRuntime(project(":generators"))

  annotationProcessor(Libs.immutablesProcessor)
  api("org.jooq:jooq")
  compileOnly(Libs.javaAnnotations)
  compileOnly(Libs.immutablesAnnotations, Libs.immutablesBuilder)
}

jooq {
  def schemaBuildDir = project(":schema").buildDir

  version = Versions.jooq
  sample(sourceSets.main) {
    jdbc {
      driver = "org.h2.Driver"
      url = "jdbc:h2:file:$schemaBuildDir/sampledb"
      user = "sa"
      password = ""
    }
    generator {
      name = "com.github.azell.jooq_utils.generators.BuilderGenerator"
      database {
        name = "org.jooq.meta.h2.H2Database"
        includes = ".*"
        excludes = "information_schema[.].*|databasechangelog.*"
        inputSchema = "PUBLIC"
      }
      generate {
        deprecated = false
        immutablePojos = true
        interfaces = true
        javaTimeTypes = true
        pojos = true
        pojosEqualsAndHashCode = true
        serializablePojos = false
      }
      target {
        packageName = "com.github.azell.jooq_utils.sample.data"
      }
    }
  }
}

tasks {
  compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
  }
}

generateSampleJooqSchemaSource.dependsOn(":schema:update")
